# ==============================================================================
# üîß MAAKAF HOME BACKEND - ENVIRONMENT CONFIGURATION
# ==============================================================================
# This file contains all the environment variables needed to run the application
# Copy this file to .env and fill in the actual values
# ==============================================================================

# ==============================================================================
# üîë GITHUB CONFIGURATION (REQUIRED)
# ==============================================================================
# GitHub Personal Access Token - Required for API access
# How to get:
# 1. Go to https://github.com/settings/tokens
# 2. Generate a new token with scopes: public_repo, read:user
# 3. Copy the token and paste it here
GITHUB_TOKEN=your_github_token_here

# ==============================================================================
# üóÑÔ∏è DATABASE CONFIGURATION
# ==============================================================================
# MongoDB connection string
# Examples:
# - Local MongoDB: mongodb://localhost:27017/maakaf_home
# - MongoDB Atlas: mongodb+srv://username:password@cluster.mongodb.net/maakaf_home
# - Docker MongoDB: mongodb://localhost:27017/maakaf_home
MONGODB_URI=mongodb+srv://urielofir:r8dx2utjDUHaiBrI@maakafmongo.scki1ux.mongodb.net/maakaf_data?retryWrites=true&w=majority&appName=maakafMongo

# ==============================================================================
# üñ•Ô∏è APPLICATION CONFIGURATION
# ==============================================================================
# Application environment (development, production, test)
NODE_ENV=development

# Server port (default: 3000)
PORT=3000

# ==============================================================================
# üìä BUSINESS LOGIC CONFIGURATION
# ==============================================================================
# Minimum number of forks required for a repository to be analyzed
# Only repositories with more forks than this value will be processed
MIN_FORK_COUNT=3

# Number of months to analyze user activity (default: 6)
MONTHS_TO_ANALYZE=6

# Maximum number of repositories to analyze per user (default: 100)
MAX_REPOS_PER_USER=100

# Maximum number of commits to fetch per repository (default: 100)
MAX_COMMITS_PER_REPO=100

# Maximum number of pull requests to fetch per repository (default: 100)
MAX_PRS_PER_REPO=100

# Maximum number of issues to fetch per repository (default: 100)
MAX_ISSUES_PER_REPO=100

# ==============================================================================
# üóÇÔ∏è CACHING CONFIGURATION
# ==============================================================================
# Time-to-live for cache entries in hours (default: 24)
# This affects how long data is cached before being refreshed
CACHE_TTL_HOURS=24

# ==============================================================================
# üåê CONNECTION & NETWORK CONFIGURATION
# ==============================================================================
# API request timeout in milliseconds (default: 30000 = 30 seconds)
# How long to wait for GitHub API responses before timing out
API_TIMEOUT=30000

# Maximum number of concurrent requests to GitHub API (default: 10)
# Lower values reduce server load but may slow down processing
MAX_CONCURRENT_REQUESTS=10

# Retry attempts for failed API requests (default: 3)
# Number of times to retry failed requests before giving up
API_RETRY_ATTEMPTS=3

# Delay between retry attempts in milliseconds (default: 1000 = 1 second)
API_RETRY_DELAY=1000

# GitHub API base URL (default: https://api.github.com)
# Usually doesn't need to be changed unless using GitHub Enterprise
GITHUB_API_BASE_URL=https://api.github.com

# Enable request rate limiting protection (true/false)
# When enabled, automatically throttles requests to avoid rate limits
ENABLE_RATE_LIMITING=true

# MongoDB connection timeout in milliseconds (default: 10000 = 10 seconds)
DB_CONNECTION_TIMEOUT=10000

# MongoDB socket timeout in milliseconds (default: 30000 = 30 seconds)
DB_SOCKET_TIMEOUT=30000

# Enable MongoDB connection pooling (true/false)
# Improves performance by reusing database connections
DB_ENABLE_POOLING=true

# Maximum number of connections in the MongoDB pool (default: 10)
DB_MAX_POOL_SIZE=10

# CORS configuration - allowed origins (comma-separated)
# Example: http://localhost:3000,https://yourdomain.com
CORS_ORIGINS=http://localhost:3000

# ==============================================================================
# üîÑ INCREMENTAL SYNC CONFIGURATION
# ==============================================================================
# Enable incremental sync system (true/false)
# When enabled, the system will perform incremental updates instead of full syncs
ENABLE_INCREMENTAL_SYNC=true

# Interval for incremental sync in hours (default: 4)
# How often to perform incremental updates
INCREMENTAL_SYNC_INTERVAL_HOURS=4

# Interval for full sync in hours (default: 24)
# How often to perform a complete data refresh
FULL_SYNC_INTERVAL_HOURS=24

# Maximum number of items to process in a single incremental sync (default: 50)
MAX_INCREMENTAL_ITEMS=50

# Number of items to process in each batch during sync (default: 10)
# Lower values use less memory but may take longer
SYNC_BATCH_SIZE=10

# ==============================================================================
# üìù LOGGING CONFIGURATION
# ==============================================================================
# All logging is handled by Winston and written to logs/app.log
# Available log levels: error, warn, info, debug
# The log level is determined by NODE_ENV:
# - development: debug level
# - production: info level
# - test: warn level

# ==============================================================================
# üöÄ QUICK START GUIDE
# ==============================================================================
# 1. Copy this file to .env: cp .env.example .env
# 2. Get GitHub token from https://github.com/settings/tokens
# 3. Set up MongoDB (local or cloud)
# 4. Update GITHUB_TOKEN and MONGODB_URI in .env
# 5. Run: npm run start:dev
# 6. Visit: http://localhost:3000/api for API documentation
#
# For detailed setup instructions, see README.md
# ==============================================================================